openapi: 3.0.0
info:
  title: Jak-Sim:Chat API
  version: 1.0.0
  description: API Documentation for the Chat API
  contact:
    name: Yuju Lee
    email: periq23@gmail.com

servers:
  - url: http://210.183.4.67:8080
    description: DEV environment

tags:
  - name: Chat Rooms
  - name: Chat Messages

paths:
  /list/group:
    get:
      tags:
        - Chat Rooms
      summary: Get a list of group chat rooms
      description: Returns a list of all group chat rooms.
      responses:
        200:
          description: A list of group chat rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    roomId:
                      type: integer
                    name:
                      type: string
        500:
          description: Failed to get chat list

  /list/challenge:
    get:
      tags:
        - Chat Rooms
      summary: Get a list of challenge chat rooms
      description: Returns a list of all challenge chat rooms.
      responses:
        200:
          description: A list of challenge chat rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    roomId:
                      type: integer
                    name:
                      type: string
        500:
          description: Failed to get chat list

  /message/{roomId}:
    get:
      tags:
        - Chat Messages
      summary: Get chat messages for a specific room
      description: Returns chat messages for the specified room.
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the room
      responses:
        200:
          description: Messages in the specified room
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    messageId:
                      type: integer
                    userId:
                      type: string
                    message:
                      type: string
                    timestamp:
                      type: string
                      format: date-time
        500:
          description: Failed to fetch chat messages

  /create:
    post:
      tags:
        - Chat Rooms
      summary: Create a new chat room
      description: Creates a new chat room with the given name, type, and participants.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roomName:
                  type: string
                type:
                  type: string
                participants:
                  type: array
                  items:
                    type: string
      responses:
        201:
          description: Room created successfully
        400:
          description: Missing User ID in headers
        500:
          description: Failed to create room

  /create/challenge/{challengeId}:
    post:
      tags:
        - Chat Rooms
      summary: Create a new challenge chat room
      description: Creates a new chat room associated with a specific challenge.
      parameters:
        - name: challengeId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the challenge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roomName:
                  type: string
                type:
                  type: string
                owner:
                  type: string
      responses:
        201:
          description: Challenge room created successfully
        400:
          description: Invalid request data
        500:
          description: Failed to create challenge chat room

  /rooms/{roomId}:
    delete:
      tags:
        - Chat Rooms
      summary: Delete a chat room
      description: Deletes a chat room with the specified room ID.
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the room to delete
      responses:
        200:
          description: Room deleted successfully
        500:
          description: Failed to delete room
  /upload:
    post:
      tags:
        - Image Upload
      summary: Upload a normal image
      description: Uploads a normal image to S3 and saves metadata to the database.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                roomId:
                  type: string
                  description: ID of the room to associate the image with.
                image:
                  type: string
                  format: binary
                  description: Image file to upload.
      parameters:
        - name: user-id
          in: header
          required: true
          schema:
            type: string
            description: User ID of the uploader.
      responses:
        200:
          description: Image uploaded successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  imageurl:
                    type: string
                    example: "https://s3.amazonaws.com/your-bucket-name/uploads/example.jpg"
                  data:
                    type: object
                    description: Metadata about the uploaded image.
        400:
          description: Invalid request or file type.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid file type."
        500:
          description: Failed to upload photo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error."

  /mission/upload:
    post:
      tags:
        - Image Upload
      summary: Upload a challenge image
      description: Uploads a challenge image to S3 and saves metadata to the database.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                roomId:
                  type: string
                  description: ID of the room to associate the image with.
                image:
                  type: string
                  format: binary
                  description: Image file to upload.
      parameters:
        - name: user-id
          in: header
          required: true
          schema:
            type: string
            description: User ID of the uploader.
      responses:
        200:
          description: Image uploaded successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  imageurl:
                    type: string
                    example: "https://s3.amazonaws.com/your-bucket-name/uploads/example.jpg"
                  data:
                    type: object
                    description: Metadata about the uploaded image.
        400:
          description: Invalid request or file type.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid file type."
        500:
          description: Failed to upload challenge photo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error."

  /mission/confirm:
    post:
      tags:
        - Image Upload
      summary: Update the status of a challenge image
      description: Updates the status of a challenge image (e.g., accepted or rejected).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                imageId:
                  type: integer
                  description: ID of the image to update.
                status:
                  type: string
                  enum: [accepted, rejected]
                  description: New status for the image.
      parameters:
        - name: user-id
          in: header
          required: true
          schema:
            type: string
            description: User ID of the reviewer.
      responses:
        200:
          description: Status updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    description: Details of the updated status.
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid request data."
        500:
          description: Failed to update photo status.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal server error."          